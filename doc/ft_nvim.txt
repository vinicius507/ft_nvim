*ft_nvim.txt*             For NVIM v0.6.0            Last change: 2024 July 12

==============================================================================
Table of Contents                                  *ft_nvim-table-of-contents*

1. 42 Nvim                                                   |ft_nvim-42-nvim|
  - Features                                        |ft_nvim-42-nvim-features|
  - Installation                                |ft_nvim-42-nvim-installation|
  - Configuration                              |ft_nvim-42-nvim-configuration|
  - Header                                            |ft_nvim-42-nvim-header|
  - Norminette                                    |ft_nvim-42-nvim-norminette|

==============================================================================
1. 42 Nvim                                                   *ft_nvim-42-nvim*

Neovim plugin for Ã‰cole 42 <https://42.fr>.


  [!NOTE] This plugin is still in early development. Breaking changes are
  expected.

FEATURES                                            *ft_nvim-42-nvim-features*

- **42 Header**: Utilities to manage the 42 header in your files.
- **Norminette Integration**: Use norminette <https://github.com/42School/norminette> as a diagnostics source.


INSTALLATION                                    *ft_nvim-42-nvim-installation*

**Requirements:**

- Neovim <https://github.com/neovim/neovim> >= 0.6.0
- nvim-lint <https://github.com/mfussenegger/nvim-lint> (Optional, used for norminette integration)

You can install the plugin using your favorite package manager:

- lazy.nvim ðŸ’¤ <https://github.com/folke/lazy.nvim>

>lua
    ---@type LazySpec
    return {
    	"vinicius507/ft_nvim",
    	cmd = { "FtHeader", "Norme" }, -- Lazy load the commands.
    	ft = { "c", "cpp" }, -- Lazy load for .c and .h files.
    	---@type ft_nvim.Config
    	opts = {},
    }
<

- packer.nvim <https://github.com/wbthomason/packer.nvim>

>lua
    use({
    	"vinicius507/ft_nvim",
    	cmd = { "FtHeader", "Norme" }, -- Lazy load the commands.
    	ft = { "c", "cpp" }, -- Lazy load for .c and .h files.
    	config = function()
    		require("ft_nvim").setup()
    	end,
    })
<

- Neovimâ€™s built-in package manager

>sh
    git clone --depth 1 https://github.com/vinicius507/ft_nvim \
    	${XDG_DATA_HOME:-~/.local/share}/nvim/site/pack/packer/start/ft_nvim
<


CONFIGURATION                                  *ft_nvim-42-nvim-configuration*

The plugin can be configured by calling the `setup` function and passing an
optional configuration object.

The following options are available:

>lua
    require("ft_nvim").setup({
    	-- Configures the 42 Header integration
    	header = {
    		-- Enable the 42 Header integration (default: true).
    		enable = true,
    		-- Your Intranet username (default: "marvin").
    		username = "marvin",
    		-- Your Intranet email (default: "marvin@42.fr").
    		email = "marvin@42.fr",
    	},
    	-- Configures the norminette integration.
    	norminette = {
    		-- Enable the norminette integration (default: true).
    		enable = true,
    		-- The command to run norminette (default: "norminette").
    		cmd = "norminette",
    		-- A function to conditionally enable the norminette integration (default: nil)
    		condition = function()
    			return true
    		end,
    	},
    })
<


HEADER                                                *ft_nvim-42-nvim-header*

42 Nvim provides a 42 header integration for various filetypes.


COMMANDS ~


                                                         *ft_nvim-:FtHeader*


:FtHeader                              Inserts/updates the 42 header for the current file.




NORMINETTE                                        *ft_nvim-42-nvim-norminette*

42 Nvim provides integration with norminette
<https://github.com/42School/norminette> as a diagnostics source using
nvim-lint <https://github.com/mfussenegger/nvim-lint>.


COMMANDS ~


                                                     *ft_nvim-:Norme-enable*


:Norme enable                          Enables the norminette integration for the current `:help window`.


                                                    *ft_nvim-:Norme-disable*


:Norme disable                         Disables the norminette integration for the current `:help window`.


                                                     *ft_nvim-:Norme-toggle*


:Norme toggle                          Toggles the norminette integration for the current `:help window`.



Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
